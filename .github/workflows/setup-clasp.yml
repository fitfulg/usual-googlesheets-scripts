name: Setup clasp

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      rollback:
        description: 'Rollback to previous commit'
        required: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test
        id: run_tests
    outputs:
      test_result: ${{ steps.run_tests.outcome }}

  setup-clasp:
    needs: test
    if: needs.test.outputs.test_result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install clasp
        run: npm install -g @google/clasp
      - name: Set up .clasprc.json
        run: |
          echo '${{ secrets.CLASP_TOKEN }}' > ~/.clasprc.json
      - name: Create .clasp.json
        run: |
          echo '{
            "scriptId": "'${{ secrets.CLASP_SCRIPT_ID }}'",
            "rootDir": "./"
          }' > .clasp.json
      - name: Verify .claspignore
        run: |
          cat .claspignore
      - name: Push to Google Apps Script
        run: clasp push

  rollback:
    needs: test
    if: needs.test.outputs.test_result == 'failure' || (github.event_name == 'workflow_dispatch' && github.event.inputs.rollback == 'true')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
  
      - name: Install CLASP
        run: npm install -g @google/clasp
  
      - name: Authenticate with CLASP
        run: |
          echo '${{ secrets.CLASP_TOKEN }}' > ~/.clasprc.json
  
      - name: Create rollback branch with changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create a new branch from the current state
          BRANCH_NAME="rollback-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          
          # Get the message of the previous commit
          PREV_COMMIT_MSG=$(git log --format=%B -n 1 HEAD^)
          
          # Get the changes needed to revert to the previous state
          git diff HEAD^..HEAD | git apply -R
          
          # Commit these changes with a message referencing the previous commit
          git add .
          git commit -m "Revert to: $PREV_COMMIT_MSG"
          
          # Push the new branch with the rollback changes
          git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" $BRANCH_NAME
          
          echo "Created and pushed branch: $BRANCH_NAME with rollback changes"

      - name: Save branch name
        run: echo "ROLLBACK_BRANCH=$BRANCH_NAME" >> $GITHUB_OUTPUT
        id: save_branch
  
      - name: Create .clasp.json
        run: |
          echo '{
            "scriptId": "${{ secrets.CLASP_SCRIPT_ID }}",
            "rootDir": "./"
          }' > .clasp.json

      - name: Push to CLASP
        run: |
          echo "Pushing to CLASP..."
          clasp push -f
        continue-on-error: true

      - name: Check CLASP version
        run: clasp -v

      - name: Notify rollback completion
        run: |
          echo "Rollback process completed. A new branch '$BRANCH_NAME' has been created with the rollback changes."
          echo "Changes have been pushed to Google Apps Script via CLASP."
          echo "You can now manually merge this branch into main if desired."

    outputs:
      ROLLBACK_BRANCH: ${{ steps.save_branch.outputs.ROLLBACK_BRANCH }}

  notify:
    needs: [test, setup-clasp, rollback]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify results
        run: |
          if [[ "${{ needs.test.outputs.test_result }}" == "failure" ]]; then
            echo "Tests failed."
            if [[ "${{ needs.rollback.result }}" == "success" && -n "${{ needs.rollback.outputs.ROLLBACK_BRANCH }}" ]]; then
              echo "Rollback branch '${{ needs.rollback.outputs.ROLLBACK_BRANCH }}' created. Please review and merge if necessary."
            else
              echo "Rollback unsuccessful or didn't run. Check logs for details."
            fi
          elif [[ "${{ needs.test.outputs.test_result }}" == "success" && "${{ needs.setup-clasp.result }}" == "success" ]]; then
            echo "Tests passed. Changes pushed to Apps Script."
          elif [[ "${{ needs.rollback.result }}" == "success" ]]; then
            echo "${{ github.event.inputs.rollback == 'true' && 'Manual' || 'Automatic' }} rollback completed."
            if [[ -n "${{ needs.rollback.outputs.ROLLBACK_BRANCH }}" ]]; then
              echo "Branch '${{ needs.rollback.outputs.ROLLBACK_BRANCH }}' created with rollback changes. Review and act accordingly."
            else
              echo "Rollback completed, but branch name unavailable. Check logs for details."
            fi
          else
            echo "Workflow completed with unexpected results. Check logs for details."
          fi